2022-05-22 23:00:59 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: SQLステートメントに文法エラーがあります "\000a    drop table if exists [*]user CASCADE "; 期待されるステートメント "identifier"
Syntax error in SQL statement "\000a    drop table if exists [*]user CASCADE "; expected "identifier"; SQL statement:

    drop table if exists user CASCADE  [42001-212]
2022-05-22 23:01:05 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: SQLステートメントに文法エラーがあります "\000a    drop table if exists [*]user CASCADE "; 期待されるステートメント "identifier"
Syntax error in SQL statement "\000a    drop table if exists [*]user CASCADE "; expected "identifier"; SQL statement:

    drop table if exists user CASCADE  [42001-212]
2022-05-22 23:01:05 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: SQLステートメントに文法エラーがあります "\000a    create table [*]user (\000a       id bigint generated by default as identity,\000a        account varchar(128) not null,\000a        admin boolean,\000a        email varchar(255) not null,\000a        password varchar(255) not null,\000a        primary key (id)\000a    )"; 期待されるステートメント "identifier"
Syntax error in SQL statement "\000a    create table [*]user (\000a       id bigint generated by default as identity,\000a        account varchar(128) not null,\000a        admin boolean,\000a        email varchar(255) not null,\000a        password varchar(255) not null,\000a        primary key (id)\000a    )"; expected "identifier"; SQL statement:

    create table user (
       id bigint generated by default as identity,
        account varchar(128) not null,
        admin boolean,
        email varchar(255) not null,
        password varchar(255) not null,
        primary key (id)
    ) [42001-212]
2022-05-22 23:01:05 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: SQLステートメントに文法エラーがあります "\000a    alter table [*]user \000a       add constraint UK_ob8kqyqqgmefl0aco34akdtpe unique (email)"; 期待されるステートメント "identifier"
Syntax error in SQL statement "\000a    alter table [*]user \000a       add constraint UK_ob8kqyqqgmefl0aco34akdtpe unique (email)"; expected "identifier"; SQL statement:

    alter table user 
       add constraint UK_ob8kqyqqgmefl0aco34akdtpe unique (email) [42001-212]
2022-05-22 23:01:05 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: テーブル "USER" が見つかりません
Table "USER" not found; SQL statement:
INSERT INTO `user` (id, account, email, admin, password) VALUES (1, 'admin', 'admin@example.com', TRUE, '{bcrypt}$2a$10$u1heCOmGzy3zuRJb253sb.9I.4bbE0ZeGS2xUbayV1eXgbZDr.4ui') [42102-212]
2022-05-22 23:01:05 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: テーブル "USER" が見つかりません
Table "USER" not found; SQL statement:
INSERT INTO `user` (id, account, email, admin, password) VALUES (2, 'test', 'test@example.com', FALSE, '{bcrypt}$2a$10$yhKS51Zk5PPSFh4aFnCps.tlxHXonHjs8DBIpa5PG9Setq33z2qcy') [42102-212]
2022-05-22 23:05:41 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: SQLステートメントに文法エラーがあります "\000a    drop table if exists [*]user CASCADE "; 期待されるステートメント "identifier"
Syntax error in SQL statement "\000a    drop table if exists [*]user CASCADE "; expected "identifier"; SQL statement:

    drop table if exists user CASCADE  [42001-212]
2022-05-22 23:11:44 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: SQLステートメントに文法エラーがあります "\000a    drop table if exists [*]user CASCADE "; 期待されるステートメント "identifier"
Syntax error in SQL statement "\000a    drop table if exists [*]user CASCADE "; expected "identifier"; SQL statement:

    drop table if exists user CASCADE  [42001-212]
2022-05-22 23:11:44 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: SQLステートメントに文法エラーがあります "\000a    create table [*]user (\000a       id bigint generated by default as identity,\000a        account varchar(128) not null,\000a        admin boolean,\000a        email varchar(255) not null,\000a        password varchar(255) not null,\000a        primary key (id)\000a    )"; 期待されるステートメント "identifier"
Syntax error in SQL statement "\000a    create table [*]user (\000a       id bigint generated by default as identity,\000a        account varchar(128) not null,\000a        admin boolean,\000a        email varchar(255) not null,\000a        password varchar(255) not null,\000a        primary key (id)\000a    )"; expected "identifier"; SQL statement:

    create table user (
       id bigint generated by default as identity,
        account varchar(128) not null,
        admin boolean,
        email varchar(255) not null,
        password varchar(255) not null,
        primary key (id)
    ) [42001-212]
2022-05-22 23:11:44 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: SQLステートメントに文法エラーがあります "\000a    alter table [*]user \000a       add constraint UK_ob8kqyqqgmefl0aco34akdtpe unique (email)"; 期待されるステートメント "identifier"
Syntax error in SQL statement "\000a    alter table [*]user \000a       add constraint UK_ob8kqyqqgmefl0aco34akdtpe unique (email)"; expected "identifier"; SQL statement:

    alter table user 
       add constraint UK_ob8kqyqqgmefl0aco34akdtpe unique (email) [42001-212]
2022-05-22 23:11:44 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: テーブル "USER" が見つかりません
Table "USER" not found; SQL statement:
INSERT INTO `user` (id, account, email, admin, password) VALUES (1, 'admin', 'admin@example.com', TRUE, '{bcrypt}$2a$10$u1heCOmGzy3zuRJb253sb.9I.4bbE0ZeGS2xUbayV1eXgbZDr.4ui') [42102-212]
2022-05-22 23:11:44 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: テーブル "USER" が見つかりません
Table "USER" not found; SQL statement:
INSERT INTO `user` (id, account, email, admin, password) VALUES (2, 'test', 'test@example.com', FALSE, '{bcrypt}$2a$10$yhKS51Zk5PPSFh4aFnCps.tlxHXonHjs8DBIpa5PG9Setq33z2qcy') [42102-212]
2022-05-22 23:11:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: SQLステートメントに文法エラーがあります "\000a    drop table if exists [*]user CASCADE "; 期待されるステートメント "identifier"
Syntax error in SQL statement "\000a    drop table if exists [*]user CASCADE "; expected "identifier"; SQL statement:

    drop table if exists user CASCADE  [42001-212]
2022-05-22 23:13:57 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: SQLステートメントに文法エラーがあります "\000a    drop table if exists [*]user CASCADE "; 期待されるステートメント "identifier"
Syntax error in SQL statement "\000a    drop table if exists [*]user CASCADE "; expected "identifier"; SQL statement:

    drop table if exists user CASCADE  [42001-212]
2022-05-22 23:13:57 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: SQLステートメントに文法エラーがあります "\000a    create table [*]user (\000a       id bigint generated by default as identity,\000a        account varchar(128) not null,\000a        admin boolean,\000a        email varchar(255) not null,\000a        password varchar(255) not null,\000a        primary key (id)\000a    )"; 期待されるステートメント "identifier"
Syntax error in SQL statement "\000a    create table [*]user (\000a       id bigint generated by default as identity,\000a        account varchar(128) not null,\000a        admin boolean,\000a        email varchar(255) not null,\000a        password varchar(255) not null,\000a        primary key (id)\000a    )"; expected "identifier"; SQL statement:

    create table user (
       id bigint generated by default as identity,
        account varchar(128) not null,
        admin boolean,
        email varchar(255) not null,
        password varchar(255) not null,
        primary key (id)
    ) [42001-212]
2022-05-22 23:13:57 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: SQLステートメントに文法エラーがあります "\000a    alter table [*]user \000a       add constraint UK_ob8kqyqqgmefl0aco34akdtpe unique (email)"; 期待されるステートメント "identifier"
Syntax error in SQL statement "\000a    alter table [*]user \000a       add constraint UK_ob8kqyqqgmefl0aco34akdtpe unique (email)"; expected "identifier"; SQL statement:

    alter table user 
       add constraint UK_ob8kqyqqgmefl0aco34akdtpe unique (email) [42001-212]
2022-05-22 23:13:57 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: テーブル "USER" が見つかりません
Table "USER" not found; SQL statement:
INSERT INTO `user` (id, account, email, admin, password) VALUES (1, 'admin', 'admin@example.com', TRUE, '{bcrypt}$2a$10$u1heCOmGzy3zuRJb253sb.9I.4bbE0ZeGS2xUbayV1eXgbZDr.4ui') [42102-212]
2022-05-22 23:13:57 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: テーブル "USER" が見つかりません
Table "USER" not found; SQL statement:
INSERT INTO `user` (id, account, email, admin, password) VALUES (2, 'test', 'test@example.com', FALSE, '{bcrypt}$2a$10$yhKS51Zk5PPSFh4aFnCps.tlxHXonHjs8DBIpa5PG9Setq33z2qcy') [42102-212]
2022-05-22 23:13:59 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: SQLステートメントに文法エラーがあります "\000a    drop table if exists [*]user CASCADE "; 期待されるステートメント "identifier"
Syntax error in SQL statement "\000a    drop table if exists [*]user CASCADE "; expected "identifier"; SQL statement:

    drop table if exists user CASCADE  [42001-212]
2022-05-22 23:14:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: SQLステートメントに文法エラーがあります "\000a    drop table if exists [*]user CASCADE "; 期待されるステートメント "identifier"
Syntax error in SQL statement "\000a    drop table if exists [*]user CASCADE "; expected "identifier"; SQL statement:

    drop table if exists user CASCADE  [42001-212]
2022-05-22 23:14:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: SQLステートメントに文法エラーがあります "\000a    create table [*]user (\000a       id bigint generated by default as identity,\000a        account varchar(128) not null,\000a        admin boolean,\000a        email varchar(255) not null,\000a        password varchar(255) not null,\000a        primary key (id)\000a    )"; 期待されるステートメント "identifier"
Syntax error in SQL statement "\000a    create table [*]user (\000a       id bigint generated by default as identity,\000a        account varchar(128) not null,\000a        admin boolean,\000a        email varchar(255) not null,\000a        password varchar(255) not null,\000a        primary key (id)\000a    )"; expected "identifier"; SQL statement:

    create table user (
       id bigint generated by default as identity,
        account varchar(128) not null,
        admin boolean,
        email varchar(255) not null,
        password varchar(255) not null,
        primary key (id)
    ) [42001-212]
2022-05-22 23:14:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: SQLステートメントに文法エラーがあります "\000a    alter table [*]user \000a       add constraint UK_ob8kqyqqgmefl0aco34akdtpe unique (email)"; 期待されるステートメント "identifier"
Syntax error in SQL statement "\000a    alter table [*]user \000a       add constraint UK_ob8kqyqqgmefl0aco34akdtpe unique (email)"; expected "identifier"; SQL statement:

    alter table user 
       add constraint UK_ob8kqyqqgmefl0aco34akdtpe unique (email) [42001-212]
2022-05-22 23:14:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: テーブル "USER" が見つかりません
Table "USER" not found; SQL statement:
INSERT INTO `user` (id, account, email, admin, password) VALUES (1, 'admin', 'admin@example.com', TRUE, '{bcrypt}$2a$10$u1heCOmGzy3zuRJb253sb.9I.4bbE0ZeGS2xUbayV1eXgbZDr.4ui') [42102-212]
2022-05-22 23:14:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: テーブル "USER" が見つかりません
Table "USER" not found; SQL statement:
INSERT INTO `user` (id, account, email, admin, password) VALUES (2, 'test', 'test@example.com', FALSE, '{bcrypt}$2a$10$yhKS51Zk5PPSFh4aFnCps.tlxHXonHjs8DBIpa5PG9Setq33z2qcy') [42102-212]
2022-05-22 23:25:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: SQLステートメントに文法エラーがあります "\000a    drop table if exists [*]user CASCADE "; 期待されるステートメント "identifier"
Syntax error in SQL statement "\000a    drop table if exists [*]user CASCADE "; expected "identifier"; SQL statement:

    drop table if exists user CASCADE  [42001-212]
2022-05-22 23:25:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: SQLステートメントに文法エラーがあります "\000a    drop table if exists [*]user CASCADE "; 期待されるステートメント "identifier"
Syntax error in SQL statement "\000a    drop table if exists [*]user CASCADE "; expected "identifier"; SQL statement:

    drop table if exists user CASCADE  [42001-212]
2022-05-22 23:25:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: SQLステートメントに文法エラーがあります "\000a    create table [*]user (\000a       id bigint generated by default as identity,\000a        account varchar(128) not null,\000a        admin boolean,\000a        email varchar(255) not null,\000a        password varchar(255) not null,\000a        primary key (id)\000a    )"; 期待されるステートメント "identifier"
Syntax error in SQL statement "\000a    create table [*]user (\000a       id bigint generated by default as identity,\000a        account varchar(128) not null,\000a        admin boolean,\000a        email varchar(255) not null,\000a        password varchar(255) not null,\000a        primary key (id)\000a    )"; expected "identifier"; SQL statement:

    create table user (
       id bigint generated by default as identity,
        account varchar(128) not null,
        admin boolean,
        email varchar(255) not null,
        password varchar(255) not null,
        primary key (id)
    ) [42001-212]
2022-05-22 23:25:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: SQLステートメントに文法エラーがあります "\000a    alter table [*]user \000a       add constraint UK_ob8kqyqqgmefl0aco34akdtpe unique (email)"; 期待されるステートメント "identifier"
Syntax error in SQL statement "\000a    alter table [*]user \000a       add constraint UK_ob8kqyqqgmefl0aco34akdtpe unique (email)"; expected "identifier"; SQL statement:

    alter table user 
       add constraint UK_ob8kqyqqgmefl0aco34akdtpe unique (email) [42001-212]
2022-05-22 23:25:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: テーブル "USER" が見つかりません
Table "USER" not found; SQL statement:
INSERT INTO `user` (id, account, email, admin, password) VALUES (1, 'admin', 'admin@example.com', TRUE, '{bcrypt}$2a$10$u1heCOmGzy3zuRJb253sb.9I.4bbE0ZeGS2xUbayV1eXgbZDr.4ui') [42102-212]
2022-05-22 23:25:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: テーブル "USER" が見つかりません
Table "USER" not found; SQL statement:
INSERT INTO `user` (id, account, email, admin, password) VALUES (2, 'test', 'test@example.com', FALSE, '{bcrypt}$2a$10$yhKS51Zk5PPSFh4aFnCps.tlxHXonHjs8DBIpa5PG9Setq33z2qcy') [42102-212]
2022-05-22 23:28:24 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: SQLステートメントに文法エラーがあります "\000a    drop table if exists [*]user CASCADE "; 期待されるステートメント "identifier"
Syntax error in SQL statement "\000a    drop table if exists [*]user CASCADE "; expected "identifier"; SQL statement:

    drop table if exists user CASCADE  [42001-212]
2022-05-22 23:28:31 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: SQLステートメントに文法エラーがあります "\000a    drop table if exists [*]user CASCADE "; 期待されるステートメント "identifier"
Syntax error in SQL statement "\000a    drop table if exists [*]user CASCADE "; expected "identifier"; SQL statement:

    drop table if exists user CASCADE  [42001-212]
2022-05-22 23:28:31 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: SQLステートメントに文法エラーがあります "\000a    create table [*]user (\000a       id bigint generated by default as identity,\000a        account varchar(128) not null,\000a        admin boolean,\000a        email varchar(255) not null,\000a        password varchar(255) not null,\000a        primary key (id)\000a    )"; 期待されるステートメント "identifier"
Syntax error in SQL statement "\000a    create table [*]user (\000a       id bigint generated by default as identity,\000a        account varchar(128) not null,\000a        admin boolean,\000a        email varchar(255) not null,\000a        password varchar(255) not null,\000a        primary key (id)\000a    )"; expected "identifier"; SQL statement:

    create table user (
       id bigint generated by default as identity,
        account varchar(128) not null,
        admin boolean,
        email varchar(255) not null,
        password varchar(255) not null,
        primary key (id)
    ) [42001-212]
2022-05-22 23:28:31 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: SQLステートメントに文法エラーがあります "\000a    alter table [*]user \000a       add constraint UK_ob8kqyqqgmefl0aco34akdtpe unique (email)"; 期待されるステートメント "identifier"
Syntax error in SQL statement "\000a    alter table [*]user \000a       add constraint UK_ob8kqyqqgmefl0aco34akdtpe unique (email)"; expected "identifier"; SQL statement:

    alter table user 
       add constraint UK_ob8kqyqqgmefl0aco34akdtpe unique (email) [42001-212]
2022-05-22 23:28:31 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: テーブル "USER" が見つかりません
Table "USER" not found; SQL statement:
INSERT INTO `user` (id, account, email, admin, password) VALUES (1, 'admin', 'admin@example.com', TRUE, '{bcrypt}$2a$10$u1heCOmGzy3zuRJb253sb.9I.4bbE0ZeGS2xUbayV1eXgbZDr.4ui') [42102-212]
2022-05-22 23:28:31 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: テーブル "USER" が見つかりません
Table "USER" not found; SQL statement:
INSERT INTO `user` (id, account, email, admin, password) VALUES (2, 'test', 'test@example.com', FALSE, '{bcrypt}$2a$10$yhKS51Zk5PPSFh4aFnCps.tlxHXonHjs8DBIpa5PG9Setq33z2qcy') [42102-212]
2022-05-23 22:27:48 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: SQLステートメントに文法エラーがあります "\000a    drop table if exists [*]user CASCADE "; 期待されるステートメント "identifier"
Syntax error in SQL statement "\000a    drop table if exists [*]user CASCADE "; expected "identifier"; SQL statement:

    drop table if exists user CASCADE  [42001-212]
2022-05-23 22:27:56 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: SQLステートメントに文法エラーがあります "\000a    drop table if exists [*]user CASCADE "; 期待されるステートメント "identifier"
Syntax error in SQL statement "\000a    drop table if exists [*]user CASCADE "; expected "identifier"; SQL statement:

    drop table if exists user CASCADE  [42001-212]
2022-05-23 22:27:56 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: SQLステートメントに文法エラーがあります "\000a    create table [*]user (\000a       id bigint generated by default as identity,\000a        account varchar(128) not null,\000a        admin boolean,\000a        email varchar(255) not null,\000a        password varchar(255) not null,\000a        primary key (id)\000a    )"; 期待されるステートメント "identifier"
Syntax error in SQL statement "\000a    create table [*]user (\000a       id bigint generated by default as identity,\000a        account varchar(128) not null,\000a        admin boolean,\000a        email varchar(255) not null,\000a        password varchar(255) not null,\000a        primary key (id)\000a    )"; expected "identifier"; SQL statement:

    create table user (
       id bigint generated by default as identity,
        account varchar(128) not null,
        admin boolean,
        email varchar(255) not null,
        password varchar(255) not null,
        primary key (id)
    ) [42001-212]
2022-05-23 22:27:56 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: SQLステートメントに文法エラーがあります "\000a    alter table [*]user \000a       add constraint UK_ob8kqyqqgmefl0aco34akdtpe unique (email)"; 期待されるステートメント "identifier"
Syntax error in SQL statement "\000a    alter table [*]user \000a       add constraint UK_ob8kqyqqgmefl0aco34akdtpe unique (email)"; expected "identifier"; SQL statement:

    alter table user 
       add constraint UK_ob8kqyqqgmefl0aco34akdtpe unique (email) [42001-212]
2022-05-23 22:27:56 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: テーブル "USER" が見つかりません
Table "USER" not found; SQL statement:
INSERT INTO `user` (id, account, email, admin, password) VALUES (1, 'admin', 'admin@example.com', TRUE, '{bcrypt}$2a$10$u1heCOmGzy3zuRJb253sb.9I.4bbE0ZeGS2xUbayV1eXgbZDr.4ui') [42102-212]
2022-05-23 22:27:57 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: テーブル "USER" が見つかりません
Table "USER" not found; SQL statement:
INSERT INTO `user` (id, account, email, admin, password) VALUES (2, 'test', 'test@example.com', FALSE, '{bcrypt}$2a$10$yhKS51Zk5PPSFh4aFnCps.tlxHXonHjs8DBIpa5PG9Setq33z2qcy') [42102-212]
2022-05-23 22:33:27 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: SQLステートメントに文法エラーがあります "\000a    drop table if exists [*]user CASCADE "; 期待されるステートメント "identifier"
Syntax error in SQL statement "\000a    drop table if exists [*]user CASCADE "; expected "identifier"; SQL statement:

    drop table if exists user CASCADE  [42001-212]
2022-05-23 22:33:59 database: flush
org.h2.message.DbException: 一般エラー: "java.lang.IllegalStateException: The write format 2 is larger than the supported format 1, and the file was not opened in read-only mode [1.4.200/5]"
General error: "java.lang.IllegalStateException: The write format 2 is larger than the supported format 1, and the file was not opened in read-only mode [1.4.200/5]" [50000-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:93)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2877)
	at org.h2.mvstore.MVStore.panic(MVStore.java:481)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:402)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3579)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:170)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:103)
	at org.h2.engine.Database.getPageStore(Database.java:2659)
	at org.h2.engine.Database.open(Database.java:675)
	at org.h2.engine.Database.openDatabase(Database.java:307)
	at org.h2.engine.Database.<init>(Database.java:301)
	at org.h2.engine.Engine.openSession(Engine.java:74)
	at org.h2.engine.Engine.openSession(Engine.java:192)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:171)
	at org.h2.engine.Engine.createSession(Engine.java:166)
	at org.h2.engine.Engine.createSession(Engine.java:29)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:340)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:173)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration.lambda$logDataSources$0(H2ConsoleAutoConfiguration.java:77)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.stream.SortedOps$RefSortingSink.end(SortedOps.java:395)
	at java.base/java.util.stream.Sink$ChainedReference.end(Sink.java:258)
	at java.base/java.util.stream.Sink$ChainedReference.end(Sink.java:258)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:510)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration.logDataSources(H2ConsoleAutoConfiguration.java:83)
	at org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration.h2Console(H2ConsoleAutoConfiguration.java:70)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:212)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:203)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addServletContextInitializerBeans(ServletContextInitializerBeans.java:97)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:260)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5219)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1396)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1386)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:919)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:835)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1396)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1386)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:919)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:263)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:432)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:927)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:478)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:182)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:160)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:577)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:414)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.mysv986.spring_boot_rest.SpringBootRestApplication.main(SpringBootRestApplication.java:10)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: 一般エラー: "java.lang.IllegalStateException: The write format 2 is larger than the supported format 1, and the file was not opened in read-only mode [1.4.200/5]"
General error: "java.lang.IllegalStateException: The write format 2 is larger than the supported format 1, and the file was not opened in read-only mode [1.4.200/5]" [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 101 more
Caused by: java.lang.IllegalStateException: The write format 2 is larger than the supported format 1, and the file was not opened in read-only mode [1.4.200/5]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.MVStore.readStoreHeader(MVStore.java:741)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:396)
	... 95 more
2022-05-23 22:33:59 database: opening /home/kuhataku/ドキュメント/spring_boot_rest/em_db
org.h2.message.DbException: レコード null を読み込み中にファイルの破損を検出しました。可能な解決策: リカバリツールを使用してください
File corrupted while reading record: null. Possible solution: use the recovery tool [90030-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.mvstore.db.MVTableEngine$Store.convertIllegalStateException(MVTableEngine.java:222)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:182)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:103)
	at org.h2.engine.Database.getPageStore(Database.java:2659)
	at org.h2.engine.Database.open(Database.java:675)
	at org.h2.engine.Database.openDatabase(Database.java:307)
	at org.h2.engine.Database.<init>(Database.java:301)
	at org.h2.engine.Engine.openSession(Engine.java:74)
	at org.h2.engine.Engine.openSession(Engine.java:192)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:171)
	at org.h2.engine.Engine.createSession(Engine.java:166)
	at org.h2.engine.Engine.createSession(Engine.java:29)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:340)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:173)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration.lambda$logDataSources$0(H2ConsoleAutoConfiguration.java:77)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.stream.SortedOps$RefSortingSink.end(SortedOps.java:395)
	at java.base/java.util.stream.Sink$ChainedReference.end(Sink.java:258)
	at java.base/java.util.stream.Sink$ChainedReference.end(Sink.java:258)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:510)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration.logDataSources(H2ConsoleAutoConfiguration.java:83)
	at org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration.h2Console(H2ConsoleAutoConfiguration.java:70)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:212)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:203)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addServletContextInitializerBeans(ServletContextInitializerBeans.java:97)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:260)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5219)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1396)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1386)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:919)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:835)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1396)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1386)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:919)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:263)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:432)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:927)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:478)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:182)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:160)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:577)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:414)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.mysv986.spring_boot_rest.SpringBootRestApplication.main(SpringBootRestApplication.java:10)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: レコード null を読み込み中にファイルの破損を検出しました。可能な解決策: リカバリツールを使用してください
File corrupted while reading record: null. Possible solution: use the recovery tool [90030-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 96 more
Caused by: java.lang.IllegalStateException: The write format 2 is larger than the supported format 1, and the file was not opened in read-only mode [1.4.200/5]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.MVStore.readStoreHeader(MVStore.java:741)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:396)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3579)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:170)
	... 93 more
2022-05-23 22:34:01 database: flush
org.h2.message.DbException: 一般エラー: "java.lang.IllegalStateException: The write format 2 is larger than the supported format 1, and the file was not opened in read-only mode [1.4.200/5]"
General error: "java.lang.IllegalStateException: The write format 2 is larger than the supported format 1, and the file was not opened in read-only mode [1.4.200/5]" [50000-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:93)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2877)
	at org.h2.mvstore.MVStore.panic(MVStore.java:481)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:402)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3579)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:170)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:103)
	at org.h2.engine.Database.getPageStore(Database.java:2659)
	at org.h2.engine.Database.open(Database.java:675)
	at org.h2.engine.Database.openDatabase(Database.java:307)
	at org.h2.engine.Database.<init>(Database.java:301)
	at org.h2.engine.Engine.openSession(Engine.java:74)
	at org.h2.engine.Engine.openSession(Engine.java:192)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:171)
	at org.h2.engine.Engine.createSession(Engine.java:166)
	at org.h2.engine.Engine.createSession(Engine.java:29)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:340)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:173)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:181)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:414)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.mysv986.spring_boot_rest.SpringBootRestApplication.main(SpringBootRestApplication.java:10)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: 一般エラー: "java.lang.IllegalStateException: The write format 2 is larger than the supported format 1, and the file was not opened in read-only mode [1.4.200/5]"
General error: "java.lang.IllegalStateException: The write format 2 is larger than the supported format 1, and the file was not opened in read-only mode [1.4.200/5]" [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 68 more
Caused by: java.lang.IllegalStateException: The write format 2 is larger than the supported format 1, and the file was not opened in read-only mode [1.4.200/5]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.MVStore.readStoreHeader(MVStore.java:741)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:396)
	... 62 more
2022-05-23 22:34:01 database: opening /home/kuhataku/ドキュメント/spring_boot_rest/em_db
org.h2.message.DbException: レコード null を読み込み中にファイルの破損を検出しました。可能な解決策: リカバリツールを使用してください
File corrupted while reading record: null. Possible solution: use the recovery tool [90030-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.mvstore.db.MVTableEngine$Store.convertIllegalStateException(MVTableEngine.java:222)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:182)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:103)
	at org.h2.engine.Database.getPageStore(Database.java:2659)
	at org.h2.engine.Database.open(Database.java:675)
	at org.h2.engine.Database.openDatabase(Database.java:307)
	at org.h2.engine.Database.<init>(Database.java:301)
	at org.h2.engine.Engine.openSession(Engine.java:74)
	at org.h2.engine.Engine.openSession(Engine.java:192)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:171)
	at org.h2.engine.Engine.createSession(Engine.java:166)
	at org.h2.engine.Engine.createSession(Engine.java:29)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:340)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:173)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:181)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:414)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.mysv986.spring_boot_rest.SpringBootRestApplication.main(SpringBootRestApplication.java:10)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: レコード null を読み込み中にファイルの破損を検出しました。可能な解決策: リカバリツールを使用してください
File corrupted while reading record: null. Possible solution: use the recovery tool [90030-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 63 more
Caused by: java.lang.IllegalStateException: The write format 2 is larger than the supported format 1, and the file was not opened in read-only mode [1.4.200/5]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.MVStore.readStoreHeader(MVStore.java:741)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:396)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3579)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:170)
	... 60 more
2022-05-23 22:37:34 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: SQLステートメントに文法エラーがあります "\000a    drop table if exists [*]user CASCADE "; 期待されるステートメント "identifier"
Syntax error in SQL statement "\000a    drop table if exists [*]user CASCADE "; expected "identifier"; SQL statement:

    drop table if exists user CASCADE  [42001-212]
2022-05-23 22:37:34 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: SQLステートメントに文法エラーがあります "\000a    create table [*]user (\000a       id bigint generated by default as identity,\000a        account varchar(128) not null,\000a        admin boolean,\000a        email varchar(255) not null,\000a        password varchar(255) not null,\000a        primary key (id)\000a    )"; 期待されるステートメント "identifier"
Syntax error in SQL statement "\000a    create table [*]user (\000a       id bigint generated by default as identity,\000a        account varchar(128) not null,\000a        admin boolean,\000a        email varchar(255) not null,\000a        password varchar(255) not null,\000a        primary key (id)\000a    )"; expected "identifier"; SQL statement:

    create table user (
       id bigint generated by default as identity,
        account varchar(128) not null,
        admin boolean,
        email varchar(255) not null,
        password varchar(255) not null,
        primary key (id)
    ) [42001-212]
2022-05-23 22:37:34 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: SQLステートメントに文法エラーがあります "\000a    alter table [*]user \000a       add constraint UK_ob8kqyqqgmefl0aco34akdtpe unique (email)"; 期待されるステートメント "identifier"
Syntax error in SQL statement "\000a    alter table [*]user \000a       add constraint UK_ob8kqyqqgmefl0aco34akdtpe unique (email)"; expected "identifier"; SQL statement:

    alter table user 
       add constraint UK_ob8kqyqqgmefl0aco34akdtpe unique (email) [42001-212]
2022-05-23 22:37:34 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: テーブル "USER" が見つかりません
Table "USER" not found; SQL statement:
INSERT INTO `user` (id, account, email, admin, password) VALUES (1, 'admin', 'admin@example.com', TRUE, '{bcrypt}$2a$10$u1heCOmGzy3zuRJb253sb.9I.4bbE0ZeGS2xUbayV1eXgbZDr.4ui') [42102-212]
2022-05-23 22:37:34 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: テーブル "USER" が見つかりません
Table "USER" not found; SQL statement:
INSERT INTO `user` (id, account, email, admin, password) VALUES (2, 'test', 'test@example.com', FALSE, '{bcrypt}$2a$10$yhKS51Zk5PPSFh4aFnCps.tlxHXonHjs8DBIpa5PG9Setq33z2qcy') [42102-212]
2022-05-23 22:38:29 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: SQLステートメントに文法エラーがあります "\000a    drop table if exists [*]user CASCADE "; 期待されるステートメント "identifier"
Syntax error in SQL statement "\000a    drop table if exists [*]user CASCADE "; expected "identifier"; SQL statement:

    drop table if exists user CASCADE  [42001-212]
2022-05-23 22:38:51 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: SQLステートメントに文法エラーがあります "\000a    drop table if exists [*]user CASCADE "; 期待されるステートメント "identifier"
Syntax error in SQL statement "\000a    drop table if exists [*]user CASCADE "; expected "identifier"; SQL statement:

    drop table if exists user CASCADE  [42001-212]
2022-05-23 22:38:51 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: SQLステートメントに文法エラーがあります "\000a    create table [*]user (\000a       id bigint generated by default as identity,\000a        account varchar(128) not null,\000a        admin boolean,\000a        email varchar(255) not null,\000a        password varchar(255) not null,\000a        primary key (id)\000a    )"; 期待されるステートメント "identifier"
Syntax error in SQL statement "\000a    create table [*]user (\000a       id bigint generated by default as identity,\000a        account varchar(128) not null,\000a        admin boolean,\000a        email varchar(255) not null,\000a        password varchar(255) not null,\000a        primary key (id)\000a    )"; expected "identifier"; SQL statement:

    create table user (
       id bigint generated by default as identity,
        account varchar(128) not null,
        admin boolean,
        email varchar(255) not null,
        password varchar(255) not null,
        primary key (id)
    ) [42001-212]
2022-05-23 22:38:51 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: SQLステートメントに文法エラーがあります "\000a    alter table [*]user \000a       add constraint UK_ob8kqyqqgmefl0aco34akdtpe unique (email)"; 期待されるステートメント "identifier"
Syntax error in SQL statement "\000a    alter table [*]user \000a       add constraint UK_ob8kqyqqgmefl0aco34akdtpe unique (email)"; expected "identifier"; SQL statement:

    alter table user 
       add constraint UK_ob8kqyqqgmefl0aco34akdtpe unique (email) [42001-212]
2022-05-23 22:38:51 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: テーブル "USER" が見つかりません
Table "USER" not found; SQL statement:
INSERT INTO `user` (id, account, email, admin, password) VALUES (1, 'admin', 'admin@example.com', TRUE, '{bcrypt}$2a$10$u1heCOmGzy3zuRJb253sb.9I.4bbE0ZeGS2xUbayV1eXgbZDr.4ui') [42102-212]
2022-05-23 22:38:51 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: テーブル "USER" が見つかりません
Table "USER" not found; SQL statement:
INSERT INTO `user` (id, account, email, admin, password) VALUES (2, 'test', 'test@example.com', FALSE, '{bcrypt}$2a$10$yhKS51Zk5PPSFh4aFnCps.tlxHXonHjs8DBIpa5PG9Setq33z2qcy') [42102-212]
2022-05-23 22:49:38 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: SQLステートメントに文法エラーがあります "\000a    drop table if exists [*]user CASCADE "; 期待されるステートメント "identifier"
Syntax error in SQL statement "\000a    drop table if exists [*]user CASCADE "; expected "identifier"; SQL statement:

    drop table if exists user CASCADE  [42001-212]
2022-05-23 22:49:49 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: SQLステートメントに文法エラーがあります "\000a    drop table if exists [*]user CASCADE "; 期待されるステートメント "identifier"
Syntax error in SQL statement "\000a    drop table if exists [*]user CASCADE "; expected "identifier"; SQL statement:

    drop table if exists user CASCADE  [42001-212]
2022-05-23 22:49:49 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: SQLステートメントに文法エラーがあります "\000a    create table [*]user (\000a       id bigint generated by default as identity,\000a        account varchar(128) not null,\000a        admin boolean,\000a        email varchar(255) not null,\000a        password varchar(255) not null,\000a        primary key (id)\000a    )"; 期待されるステートメント "identifier"
Syntax error in SQL statement "\000a    create table [*]user (\000a       id bigint generated by default as identity,\000a        account varchar(128) not null,\000a        admin boolean,\000a        email varchar(255) not null,\000a        password varchar(255) not null,\000a        primary key (id)\000a    )"; expected "identifier"; SQL statement:

    create table user (
       id bigint generated by default as identity,
        account varchar(128) not null,
        admin boolean,
        email varchar(255) not null,
        password varchar(255) not null,
        primary key (id)
    ) [42001-212]
2022-05-23 22:49:49 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: SQLステートメントに文法エラーがあります "\000a    alter table [*]user \000a       add constraint UK_ob8kqyqqgmefl0aco34akdtpe unique (email)"; 期待されるステートメント "identifier"
Syntax error in SQL statement "\000a    alter table [*]user \000a       add constraint UK_ob8kqyqqgmefl0aco34akdtpe unique (email)"; expected "identifier"; SQL statement:

    alter table user 
       add constraint UK_ob8kqyqqgmefl0aco34akdtpe unique (email) [42001-212]
2022-05-23 22:49:49 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: テーブル "USER" が見つかりません
Table "USER" not found; SQL statement:
INSERT INTO `user` (id, account, email, admin, password) VALUES (1, 'admin', 'admin@example.com', TRUE, '{bcrypt}$2a$10$u1heCOmGzy3zuRJb253sb.9I.4bbE0ZeGS2xUbayV1eXgbZDr.4ui') [42102-212]
2022-05-23 22:49:49 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: テーブル "USER" が見つかりません
Table "USER" not found; SQL statement:
INSERT INTO `user` (id, account, email, admin, password) VALUES (2, 'test', 'test@example.com', FALSE, '{bcrypt}$2a$10$yhKS51Zk5PPSFh4aFnCps.tlxHXonHjs8DBIpa5PG9Setq33z2qcy') [42102-212]
2022-05-23 22:54:13 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: SQLステートメントに文法エラーがあります "\000a    drop table if exists [*]user CASCADE "; 期待されるステートメント "identifier"
Syntax error in SQL statement "\000a    drop table if exists [*]user CASCADE "; expected "identifier"; SQL statement:

    drop table if exists user CASCADE  [42001-212]
2022-05-23 22:54:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: SQLステートメントに文法エラーがあります "\000a    drop table if exists [*]user CASCADE "; 期待されるステートメント "identifier"
Syntax error in SQL statement "\000a    drop table if exists [*]user CASCADE "; expected "identifier"; SQL statement:

    drop table if exists user CASCADE  [42001-212]
2022-05-23 22:54:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: SQLステートメントに文法エラーがあります "\000a    create table [*]user (\000a       id bigint generated by default as identity,\000a        account varchar(128) not null,\000a        admin boolean,\000a        email varchar(255) not null,\000a        password varchar(255) not null,\000a        primary key (id)\000a    )"; 期待されるステートメント "identifier"
Syntax error in SQL statement "\000a    create table [*]user (\000a       id bigint generated by default as identity,\000a        account varchar(128) not null,\000a        admin boolean,\000a        email varchar(255) not null,\000a        password varchar(255) not null,\000a        primary key (id)\000a    )"; expected "identifier"; SQL statement:

    create table user (
       id bigint generated by default as identity,
        account varchar(128) not null,
        admin boolean,
        email varchar(255) not null,
        password varchar(255) not null,
        primary key (id)
    ) [42001-212]
2022-05-23 22:54:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: SQLステートメントに文法エラーがあります "\000a    alter table [*]user \000a       add constraint UK_ob8kqyqqgmefl0aco34akdtpe unique (email)"; 期待されるステートメント "identifier"
Syntax error in SQL statement "\000a    alter table [*]user \000a       add constraint UK_ob8kqyqqgmefl0aco34akdtpe unique (email)"; expected "identifier"; SQL statement:

    alter table user 
       add constraint UK_ob8kqyqqgmefl0aco34akdtpe unique (email) [42001-212]
2022-05-23 22:54:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: テーブル "USER" が見つかりません
Table "USER" not found; SQL statement:
INSERT INTO `user` (id, account, email, admin, password) VALUES (1, 'admin', 'admin@example.com', TRUE, '{bcrypt}$2a$10$u1heCOmGzy3zuRJb253sb.9I.4bbE0ZeGS2xUbayV1eXgbZDr.4ui') [42102-212]
2022-05-23 22:54:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: テーブル "USER" が見つかりません
Table "USER" not found; SQL statement:
INSERT INTO `user` (id, account, email, admin, password) VALUES (2, 'test', 'test@example.com', FALSE, '{bcrypt}$2a$10$yhKS51Zk5PPSFh4aFnCps.tlxHXonHjs8DBIpa5PG9Setq33z2qcy') [42102-212]
2022-05-23 23:05:58 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: SQLステートメントに文法エラーがあります "\000a    drop table if exists [*]user CASCADE "; 期待されるステートメント "identifier"
Syntax error in SQL statement "\000a    drop table if exists [*]user CASCADE "; expected "identifier"; SQL statement:

    drop table if exists user CASCADE  [42001-212]
2022-05-23 23:06:06 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: SQLステートメントに文法エラーがあります "\000a    drop table if exists [*]user CASCADE "; 期待されるステートメント "identifier"
Syntax error in SQL statement "\000a    drop table if exists [*]user CASCADE "; expected "identifier"; SQL statement:

    drop table if exists user CASCADE  [42001-212]
2022-05-23 23:06:06 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: SQLステートメントに文法エラーがあります "\000a    create table [*]user (\000a       id bigint generated by default as identity,\000a        account varchar(128) not null,\000a        admin boolean,\000a        email varchar(255) not null,\000a        password varchar(255) not null,\000a        primary key (id)\000a    )"; 期待されるステートメント "identifier"
Syntax error in SQL statement "\000a    create table [*]user (\000a       id bigint generated by default as identity,\000a        account varchar(128) not null,\000a        admin boolean,\000a        email varchar(255) not null,\000a        password varchar(255) not null,\000a        primary key (id)\000a    )"; expected "identifier"; SQL statement:

    create table user (
       id bigint generated by default as identity,
        account varchar(128) not null,
        admin boolean,
        email varchar(255) not null,
        password varchar(255) not null,
        primary key (id)
    ) [42001-212]
2022-05-23 23:06:06 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: SQLステートメントに文法エラーがあります "\000a    alter table [*]user \000a       add constraint UK_ob8kqyqqgmefl0aco34akdtpe unique (email)"; 期待されるステートメント "identifier"
Syntax error in SQL statement "\000a    alter table [*]user \000a       add constraint UK_ob8kqyqqgmefl0aco34akdtpe unique (email)"; expected "identifier"; SQL statement:

    alter table user 
       add constraint UK_ob8kqyqqgmefl0aco34akdtpe unique (email) [42001-212]
2022-05-23 23:06:06 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: テーブル "USER" が見つかりません
Table "USER" not found; SQL statement:
INSERT INTO `user` (id, account, email, admin, password) VALUES (1, 'admin', 'admin@example.com', TRUE, '{bcrypt}$2a$10$u1heCOmGzy3zuRJb253sb.9I.4bbE0ZeGS2xUbayV1eXgbZDr.4ui') [42102-212]
2022-05-23 23:06:06 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: テーブル "USER" が見つかりません
Table "USER" not found; SQL statement:
INSERT INTO `user` (id, account, email, admin, password) VALUES (2, 'test', 'test@example.com', FALSE, '{bcrypt}$2a$10$yhKS51Zk5PPSFh4aFnCps.tlxHXonHjs8DBIpa5PG9Setq33z2qcy') [42102-212]
2022-05-23 23:14:06 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: SQLステートメントに文法エラーがあります "\000a    drop table if exists [*]user CASCADE "; 期待されるステートメント "identifier"
Syntax error in SQL statement "\000a    drop table if exists [*]user CASCADE "; expected "identifier"; SQL statement:

    drop table if exists user CASCADE  [42001-212]
2022-05-23 23:14:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "USER" not found (candidates are: "user"); SQL statement:
INSERT INTO `user` (id, account, email, admin, password) VALUES (1, 'admin', 'admin@example.com', TRUE, '{bcrypt}$2a$10$u1heCOmGzy3zuRJb253sb.9I.4bbE0ZeGS2xUbayV1eXgbZDr.4ui') [42103-212]
2022-05-23 23:14:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "USER" not found (candidates are: "user"); SQL statement:
INSERT INTO `user` (id, account, email, admin, password) VALUES (2, 'test', 'test@example.com', FALSE, '{bcrypt}$2a$10$yhKS51Zk5PPSFh4aFnCps.tlxHXonHjs8DBIpa5PG9Setq33z2qcy') [42103-212]
2022-05-23 23:16:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "USER" not found (candidates are: "user"); SQL statement:
INSERT INTO `user` (id, account, email, admin, password) VALUES (1, 'admin', 'admin@example.com', TRUE, '{bcrypt}$2a$10$u1heCOmGzy3zuRJb253sb.9I.4bbE0ZeGS2xUbayV1eXgbZDr.4ui') [42103-212]
2022-05-23 23:16:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "USER" not found (candidates are: "user"); SQL statement:
INSERT INTO `user` (id, account, email, admin, password) VALUES (2, 'test', 'test@example.com', FALSE, '{bcrypt}$2a$10$yhKS51Zk5PPSFh4aFnCps.tlxHXonHjs8DBIpa5PG9Setq33z2qcy') [42103-212]
2022-05-23 23:17:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: テーブル "`user`" が見つかりません
Table "`user`" not found; SQL statement:
INSERT INTO "`user`" (id, account, email, admin, password) VALUES (1, 'admin', 'admin@example.com', TRUE, '{bcrypt}$2a$10$u1heCOmGzy3zuRJb253sb.9I.4bbE0ZeGS2xUbayV1eXgbZDr.4ui') [42102-212]
2022-05-23 23:17:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: テーブル "`user`" が見つかりません
Table "`user`" not found; SQL statement:
INSERT INTO "`user`" (id, account, email, admin, password) VALUES (2, 'test', 'test@example.com', FALSE, '{bcrypt}$2a$10$yhKS51Zk5PPSFh4aFnCps.tlxHXonHjs8DBIpa5PG9Setq33z2qcy') [42102-212]
2022-05-23 23:19:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "USER" not found (candidates are: "user"); SQL statement:
INSERT INTO `user` (id, account, email, admin, password) VALUES (1, 'admin', 'admin@example.com', TRUE, '{bcrypt}$2a$10$u1heCOmGzy3zuRJb253sb.9I.4bbE0ZeGS2xUbayV1eXgbZDr.4ui') [42103-212]
2022-05-23 23:19:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "USER" not found (candidates are: "user"); SQL statement:
INSERT INTO `user` (id, account, email, admin, password) VALUES (2, 'test', 'test@example.com', FALSE, '{bcrypt}$2a$10$yhKS51Zk5PPSFh4aFnCps.tlxHXonHjs8DBIpa5PG9Setq33z2qcy') [42103-212]
2022-05-24 22:57:38 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "user" not found (this database is empty); SQL statement:
/* select generatedAlias0 from User as generatedAlias0 where generatedAlias0.account=:param0 */ select user0_.id as id1_1_, user0_.account as account2_1_, user0_.admin as admin3_1_, user0_.email as email4_1_, user0_.password as password5_1_ from "user" user0_ where user0_.account=? [42104-212]
